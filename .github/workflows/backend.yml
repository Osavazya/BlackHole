name: backend

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          # dev-зависимости (pytest) только если есть
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      # ---- .env из секретов (только на push в твою репу)
      - name: Create backend/.env from secrets (push)
        if: github.event_name == 'push'
        working-directory: backend
        run: |
          cat > .env <<'EOF'
          BACKEND_SECRET_KEY=${{ secrets.SECRET_KEY }}
          BACKEND_DATABASE_URL=${{ secrets.DATABASE_URL }}
          BACKEND_ALLOWED_ORIGINS_RAW=${{ secrets.ALLOWED_ORIGINS_RAW }}
          BACKEND_ENV=${{ secrets.ENV }}
          EOF

      # ---- Фолбэк для PR/dispatch (секреты недоступны из форков)
      - name: Create backend/.env for PR (sqlite fallback)
        if: github.event_name != 'push'
        working-directory: backend
        run: |
          cat > .env <<'EOF'
          BACKEND_SECRET_KEY=ci-secret
          BACKEND_DATABASE_URL=sqlite:///./data.db
          BACKEND_ALLOWED_ORIGINS_RAW=http://localhost:5173
          BACKEND_ENV=dev
          EOF

      - name: Show .env (masked)
        working-directory: backend
        run: sed -e 's/=.*/=***MASKED***/' .env

      - name: Sanity import settings
        working-directory: backend
        run: |
          python - <<'PY'
          from app.settings import settings
          print("env:", settings.env)
          print("db:", settings.database_url)
          print("origins:", settings.allowed_origins)
          PY

      - name: Run tests
        working-directory: backend
        run: pytest -q
