name: backend

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # dev-зависимости (pytest, httpx, uvicorn и т.п.)
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Create backend/.env (with fallbacks for PRs)
        working-directory: backend
        run: |
          mkdir -p .
          # Фолбэки: если секреты недоступны (PR из форка), используем безопасные значения
          BK_SECRET="${{ secrets.BACKEND_SECRET_KEY }}"
          BK_DBURL="${{ secrets.BACKEND_DATABASE_URL }}"
          BK_ORIGINS="${{ secrets.BACKEND_ALLOWED_ORIGINS_RAW }}"
          BK_ENV="${{ secrets.BACKEND_ENV }}"

          [ -z "$BK_SECRET" ]  && BK_SECRET="ci-secret"
          [ -z "$BK_DBURL" ]   && BK_DBURL="sqlite:///./data.db"
          [ -z "$BK_ORIGINS" ] && BK_ORIGINS="http://localhost:5173"
          [ -z "$BK_ENV" ]     && BK_ENV="dev"

          {
            echo "BACKEND_SECRET_KEY=$BK_SECRET"
            echo "BACKEND_DATABASE_URL=$BK_DBURL"
            echo "BACKEND_ALLOWED_ORIGINS_RAW=$BK_ORIGINS"
            echo "BACKEND_ENV=$BK_ENV"
          } > .env

          # Покажем, что файл создан (замаскировав значения)
          sed -e 's/=.*/=***MASKED***/' .env

      - name: Sanity import settings
        working-directory: backend
        run: |
          python - <<'PY'
          from app.settings import settings
          print("env:", settings.env)
          print("db:", settings.database_url)
          print("origins:", settings.allowed_origins)
          PY

      - name: Run tests
        working-directory: backend
        env:
          # На CI тесты всегда гоняем на sqlite, чтобы не ходить во внешние сервисы
          BACKEND_DATABASE_URL: "sqlite:///./data.db"
          BACKEND_ENV: "dev"
        run: |
          pytest -q
