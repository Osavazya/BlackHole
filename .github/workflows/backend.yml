name: backend

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          python - <<'PY'
          import importlib.util, sys
          sys.exit(0 if importlib.util.find_spec("pytest") else 1)
          PY
        continue-on-error: true

      - name: Ensure pytest (fallback)
        if: failure()
        run: pip install pytest

      - name: Create backend/.env from secrets
        run: |
          mkdir -p backend
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}"                              >  backend/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}"                          >> backend/.env
          echo "ALLOWED_ORIGINS_RAW=${{ secrets.ALLOWED_ORIGINS_RAW }}"            >> backend/.env
          echo "ENV=${{ secrets.ENV }}"                                            >> backend/.env

      - name: Show .env (masked)
        run: sed -e 's/SECRET_KEY=.*/SECRET_KEY=***MASKED***/' backend/.env

      - name: Sanity import settings
        working-directory: backend
        run: |
          python - <<'PY'
          from app.settings import settings
          print("env:", settings.env)
          print("db:", settings.database_url)
          print("origins:", settings.allowed_origins)
          PY

      - name: Run tests
        working-directory: backend
        run: |
          pytest -q
