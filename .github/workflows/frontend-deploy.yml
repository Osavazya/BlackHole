name: Frontend Deploy

on:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-deploy.yml"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build"
        required: false
        default: main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || 'main' }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: npm ci

      - name: Build
        working-directory: frontend
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Upload build to S3 releases/<sha>
        env:
          BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          aws s3 cp frontend/dist "s3://$BUCKET/releases/${GITHUB_SHA}/" --recursive

      - name: Promote release to root
        env:
          BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          aws s3 cp "s3://$BUCKET/releases/${GITHUB_SHA}/" "s3://$BUCKET/" --recursive
          aws s3 cp "s3://$BUCKET/releases/${GITHUB_SHA}/index.html" "s3://$BUCKET/index.html" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html"
          echo "${GITHUB_SHA}" | aws s3 cp - "s3://$BUCKET/releases/latest.txt"

      - name: Append history
        env:
          BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          set -e
          tmp=$(mktemp)
          aws s3 cp "s3://$BUCKET/releases/history.txt" "$tmp" 2>/dev/null || true
          echo "$(date -u +%FT%TZ)  ${GITHUB_SHA}" >> "$tmp"
          aws s3 cp "$tmp" "s3://$BUCKET/releases/history.txt"
          rm -f "$tmp"

      - name: Invalidate CloudFront
        env:
          DIST: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$DIST" \
            --paths "/index.html" "/assets/*" "/media/*"
