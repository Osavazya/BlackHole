name: Frontend Deploy (versioned)

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
  workflow_dispatch:
    inputs:
      sha:
        description: 'Release SHA to promote (rollback)'
        required: false
        default: ''

concurrency:
  group: frontend-deploy
  cancel-in-progress: true

jobs:
  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: npm ci

      # важный момент: base указываем на releases/<sha> чтобы index.html ссылался на правильные пути
      - name: Build (VITE_API_URL from secrets)
        working-directory: frontend
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
        run: npm run build -- --base=/releases/${{ github.sha }}/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      # грузим весь билд в releases/<sha> с длинным кешем
      - name: Upload build to S3 (versioned path)
        run: |
          aws s3 sync frontend/dist/ s3://${{ secrets.S3_BUCKET }}/releases/${{ github.sha }}/ \
            --delete \
            --cache-control "public,max-age=31536000,immutable"

      # кладём метку latest.txt — удобно видеть текущий релиз
      - name: Write latest pointer
        run: |
          echo "${{ github.sha }}" > latest.txt
          aws s3 cp latest.txt s3://${{ secrets.S3_BUCKET }}/releases/latest.txt \
            --cache-control "no-cache, no-store, must-revalidate"

      # ПРОМОУШЕН: делаем этот релиз "текущим" — копируем его index.html в корень бакета
      - name: Promote this release to root
        run: |
          aws s3 cp s3://${{ secrets.S3_BUCKET }}/releases/${{ github.sha }}/index.html \
                   s3://${{ secrets.S3_BUCKET }}/index.html \
                   --cache-control "no-cache, no-store, must-revalidate" \
                   --content-type "text/html"

      - name: Invalidate CloudFront (index only)
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/index.html"

  promote:
    # ручной откат/промо любого sha: Actions → Run workflow → вбей нужный SHA
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.sha != ''
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Promote provided SHA to root (rollback)
        run: |
          SHA="${{ github.event.inputs.sha }}"
          echo "Promoting SHA=$SHA"
          aws s3 cp s3://${{ secrets.S3_BUCKET }}/releases/${SHA}/index.html \
                   s3://${{ secrets.S3_BUCKET }}/index.html \
                   --cache-control "no-cache, no-store, must-revalidate" \
                   --content-type "text/html"
          echo "$SHA" > latest.txt
          aws s3 cp latest.txt s3://${{ secrets.S3_BUCKET }}/releases/latest.txt \
            --cache-control "no-cache, no-store, must-revalidate"
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/index.html"
