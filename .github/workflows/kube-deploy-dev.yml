name: kube-deploy-dev

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'k8s/**'
      - '.github/workflows/kube-deploy-dev.yml'
  workflow_dispatch:

permissions:
  id-token: write     # нужно для OIDC AssumeRole
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}          # 765762661597.dkr.ecr.eu-south-2.amazonaws.com
  ROLE_TO_ASSUME: ${{ secrets.ROLE_TO_ASSUME }}      # arn:aws:iam::765762661597:role/gh-actions-blackhole-dev

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute TAG
        id: vars
        run: |
          echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      # FRONTEND
      - name: Build & push frontend
        run: |
          docker buildx build \
            --file frontend/Dockerfile \
            --tag $ECR_REGISTRY/blackhole-frontend:dev \
            --tag $ECR_REGISTRY/blackhole-frontend:${{ steps.vars.outputs.TAG }} \
            --push .

      # BACKEND
      - name: Build & push backend
        run: |
          docker buildx build \
            --file backend/Dockerfile \
            --tag $ECR_REGISTRY/blackhole-backend:dev \
            --tag $ECR_REGISTRY/blackhole-backend:${{ steps.vars.outputs.TAG }} \
            --push .

      - name: Export TAG for next job
        run: echo "IMAGE_TAG=${{ steps.vars.outputs.TAG }}" >> $GITHUB_ENV

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name "$EKS_CLUSTER" --region "$AWS_REGION"

      # Применяем манифесты (в них стоят образы с :dev — это базовый тег)
      - name: Apply base manifests
        run: |
          kubectl apply -f k8s/base

      # Закрепляем конкретную версию по SHA, чтобы был корректный rollout
      - name: Pin images to SHA
        run: |
          kubectl set image deploy/frontend frontend=$ECR_REGISTRY/blackhole-frontend:${IMAGE_TAG} --namespace default
          kubectl set image deploy/backend  backend=$ECR_REGISTRY/blackhole-backend:${IMAGE_TAG}  --namespace default

      - name: Wait for rollout
        run: |
          kubectl rollout status deploy/frontend --timeout=3m || true
          kubectl rollout status deploy/backend  --timeout=3m || true
